<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Typing Tutor</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h1 class="text-center mb-4">Typing Tutor</h1>
                <div class="card mb-4">
                    <div class="card-body">
                        <textarea id="typingArea" class="form-control mb-3" rows="3" placeholder="Start typing here..."></textarea>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="mb-0">Typing Speed: <span id="wpm">0</span> WPM</p>
                            <button id="clearButton" class="btn btn-danger">Clear All</button>
                        </div>
                    </div>
                </div>
                <div id="virtualKeyboard" class="card">
                    <div class="card-body">
                        <div class="row g-1">
                            <div class="col-12 d-flex justify-content-center">
                                <button class="btn btn-outline-secondary m-1" data-key="`">`</button>
                                <button class="btn btn-outline-secondary m-1" data-key="1">1</button>
                                <button class="btn btn-outline-secondary m-1" data-key="2">2</button>
                                <button class="btn btn-outline-secondary m-1" data-key="3">3</button>
                                <button class="btn btn-outline-secondary m-1" data-key="4">4</button>
                                <button class="btn btn-outline-secondary m-1" data-key="5">5</button>
                                <button class="btn btn-outline-secondary m-1" data-key="6">6</button>
                                <button class="btn btn-outline-secondary m-1" data-key="7">7</button>
                                <button class="btn btn-outline-secondary m-1" data-key="8">8</button>
                                <button class="btn btn-outline-secondary m-1" data-key="9">9</button>
                                <button class="btn btn-outline-secondary m-1" data-key="0">0</button>
                                <button class="btn btn-outline-secondary m-1" data-key="-">-</button>
                                <button class="btn btn-outline-secondary m-1" data-key="=">=</button>
                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <button class="btn btn-outline-secondary m-1" data-key="q">q</button>
                                <button class="btn btn-outline-secondary m-1" data-key="w">w</button>
                                <button class="btn btn-outline-secondary m-1" data-key="e">e</button>
                                <button class="btn btn-outline-secondary m-1" data-key="r">r</button>
                                <button class="btn btn-outline-secondary m-1" data-key="t">t</button>
                                <button class="btn btn-outline-secondary m-1" data-key="y">y</button>
                                <button class="btn btn-outline-secondary m-1" data-key="u">u</button>
                                <button class="btn btn-outline-secondary m-1" data-key="i">i</button>
                                <button class="btn btn-outline-secondary m-1" data-key="o">o</button>
                                <button class="btn btn-outline-secondary m-1" data-key="p">p</button>
                                <button class="btn btn-outline-secondary m-1" data-key="[">[</button>
                                <button class="btn btn-outline-secondary m-1" data-key="]">]</button>
                                <button class="btn btn-outline-secondary m-1" data-key="\">\\</button>
                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <button class="btn btn-outline-secondary m-1" data-key="a">a</button>
                                <button class="btn btn-outline-secondary m-1" data-key="s">s</button>
                                <button class="btn btn-outline-secondary m-1" data-key="d">d</button>
                                <button class="btn btn-outline-secondary m-1" data-key="f">f</button>
                                <button class="btn btn-outline-secondary m-1" data-key="g">g</button>
                                <button class="btn btn-outline-secondary m-1" data-key="h">h</button>
                                <button class="btn btn-outline-secondary m-1" data-key="j">j</button>
                                <button class="btn btn-outline-secondary m-1" data-key="k">k</button>
                                <button class="btn btn-outline-secondary m-1" data-key="l">l</button>
                                <button class="btn btn-outline-secondary m-1" data-key=";">;</button>
                                <button class="btn btn-outline-secondary m-1" data-key="'">'</button>
                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <button class="btn btn-outline-secondary m-1" data-key="z">z</button>
                                <button class="btn btn-outline-secondary m-1" data-key="x">x</button>
                                <button class="btn btn-outline-secondary m-1" data-key="c">c</button>
                                <button class="btn btn-outline-secondary m-1" data-key="v">v</button>
                                <button class="btn btn-outline-secondary m-1" data-key="b">b</button>
                                <button class="btn btn-outline-secondary m-1" data-key="n">n</button>
                                <button class="btn btn-outline-secondary m-1" data-key="m">m</button>
                                <button class="btn btn-outline-secondary m-1" data-key=",">,</button>
                                <button class="btn btn-outline-secondary m-1" data-key=".">.</button>
                                <button class="btn btn-outline-secondary m-1" data-key="/">/</button>
                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <button class="btn btn-outline-secondary m-1 px-5" data-key=" ">Space</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const typingArea = document.getElementById('typingArea');
        const wpmDisplay = document.getElementById('wpm');
        const clearButton = document.getElementById('clearButton');
        const keys = document.querySelectorAll('#virtualKeyboard button');
        let startTime = null;
        let wordCount = 0;
        let isCapsLockOn = false;
        let isShiftPressed = false;

        const validKeys = Array.from(keys).map(button => button.getAttribute('data-key').toLowerCase());

        function updateKeyboardDisplay() {
            const isUpperCase = isCapsLockOn !== isShiftPressed; // XOR for Caps Lock and Shift
            keys.forEach(button => {
                const key = button.getAttribute('data-key');
                if (/[a-z]/.test(key)) {
                    button.textContent = isUpperCase ? key.toUpperCase() : key.toLowerCase();
                }
            });
        }

        function highlightKey(key) {
            keys.forEach(button => {
                if (button.getAttribute('data-key').toLowerCase() === key.toLowerCase()) {
                    button.classList.add('btn-primary');
                    button.classList.remove('btn-outline-secondary');
                    setTimeout(() => {
                        button.classList.remove('btn-primary');
                        button.classList.add('btn-outline-secondary');
                    }, 200);
                }
            });
        }

        function calculateWPM() {
            if (!startTime) return 0;
            const currentTime = new Date();
            const timeDiff = (currentTime - startTime) / 1000 / 60; // minutes
            if (timeDiff === 0) return 0;
            return Math.round((wordCount / timeDiff));
        }

        function updateWordCount() {
            const text = typingArea.value.trim();
            wordCount = text ? text.split(/\s+/).length : 0;
        }

        function resetTyping() {
            typingArea.value = '';
            wordCount = 0;
            startTime = null;
            wpmDisplay.textContent = '0';
        }

        typingArea.addEventListener('keydown', (e) => {
            e.preventDefault(); // Prevent default to control input
            const key = e.key === ' ' ? ' ' : e.key;
            if (key === 'CapsLock') {
                isCapsLockOn = !isCapsLockOn;
                updateKeyboardDisplay();
            } else if (key === 'Shift') {
                isShiftPressed = true;
                updateKeyboardDisplay();
            } else if (validKeys.includes(key.toLowerCase())) {
                if (!startTime) startTime = new Date();
                highlightKey(key);
                const isUpperCase = isCapsLockOn !== isShiftPressed;
                typingArea.value += isUpperCase && /[a-z]/.test(key) ? key.toUpperCase() : key;
                updateWordCount();
                wpmDisplay.textContent = calculateWPM();
            } else if (e.key === 'Backspace') {
                typingArea.value = typingArea.value.slice(0, -1);
                updateWordCount();
                wpmDisplay.textContent = calculateWPM();
            }
        });

        typingArea.addEventListener('keyup', (e) => {
            if (e.key === 'Shift') {
                isShiftPressed = false;
                updateKeyboardDisplay();
            }
        });

        typingArea.addEventListener('paste', (e) => {
            e.preventDefault(); // Prevent pasting
        });

        clearButton.addEventListener('click', resetTyping);

        // Initialize keyboard display
        updateKeyboardDisplay();
    </script>
</body>
</html>
